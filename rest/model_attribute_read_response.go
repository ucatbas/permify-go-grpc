/*
Permify API

Permify is an open source authorization service for creating fine-grained and scalable authorization systems.

API version: v0.10.1
Contact: hello@permify.co
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package permify

import (
	"encoding/json"
)

// checks if the AttributeReadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeReadResponse{}

// AttributeReadResponse AttributeReadResponse defines the structure of the response to an attribute read request. It includes the attributes retrieved and a continuous token for handling result pagination.
type AttributeReadResponse struct {
	// attributes is a list of the attributes retrieved in the read operation.
	Attributes []Attribute `json:"attributes,omitempty"`
	// continuous_token is used in the case of paginated reads to retrieve the next page of results.
	ContinuousToken *string `json:"continuous_token,omitempty"`
}

// NewAttributeReadResponse instantiates a new AttributeReadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeReadResponse() *AttributeReadResponse {
	this := AttributeReadResponse{}
	return &this
}

// NewAttributeReadResponseWithDefaults instantiates a new AttributeReadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeReadResponseWithDefaults() *AttributeReadResponse {
	this := AttributeReadResponse{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *AttributeReadResponse) GetAttributes() []Attribute {
	if o == nil || IsNil(o.Attributes) {
		var ret []Attribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeReadResponse) GetAttributesOk() ([]Attribute, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *AttributeReadResponse) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []Attribute and assigns it to the Attributes field.
func (o *AttributeReadResponse) SetAttributes(v []Attribute) {
	o.Attributes = v
}

// GetContinuousToken returns the ContinuousToken field value if set, zero value otherwise.
func (o *AttributeReadResponse) GetContinuousToken() string {
	if o == nil || IsNil(o.ContinuousToken) {
		var ret string
		return ret
	}
	return *o.ContinuousToken
}

// GetContinuousTokenOk returns a tuple with the ContinuousToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeReadResponse) GetContinuousTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ContinuousToken) {
		return nil, false
	}
	return o.ContinuousToken, true
}

// HasContinuousToken returns a boolean if a field has been set.
func (o *AttributeReadResponse) HasContinuousToken() bool {
	if o != nil && !IsNil(o.ContinuousToken) {
		return true
	}

	return false
}

// SetContinuousToken gets a reference to the given string and assigns it to the ContinuousToken field.
func (o *AttributeReadResponse) SetContinuousToken(v string) {
	o.ContinuousToken = &v
}

func (o AttributeReadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeReadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.ContinuousToken) {
		toSerialize["continuous_token"] = o.ContinuousToken
	}
	return toSerialize, nil
}

type NullableAttributeReadResponse struct {
	value *AttributeReadResponse
	isSet bool
}

func (v NullableAttributeReadResponse) Get() *AttributeReadResponse {
	return v.value
}

func (v *NullableAttributeReadResponse) Set(val *AttributeReadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeReadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeReadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeReadResponse(val *AttributeReadResponse) *NullableAttributeReadResponse {
	return &NullableAttributeReadResponse{value: val, isSet: true}
}

func (v NullableAttributeReadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeReadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


