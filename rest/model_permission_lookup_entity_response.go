/*
Permify API

Permify is an open source authorization service for creating fine-grained and scalable authorization systems.

API version: v0.10.1
Contact: hello@permify.co
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package permify

import (
	"encoding/json"
)

// checks if the PermissionLookupEntityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionLookupEntityResponse{}

// PermissionLookupEntityResponse PermissionLookupEntityResponse is the response message for the LookupEntity method in the Permission service.
type PermissionLookupEntityResponse struct {
	// List of identifiers for entities that match the lookup.
	EntityIds []string `json:"entity_ids,omitempty"`
}

// NewPermissionLookupEntityResponse instantiates a new PermissionLookupEntityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionLookupEntityResponse() *PermissionLookupEntityResponse {
	this := PermissionLookupEntityResponse{}
	return &this
}

// NewPermissionLookupEntityResponseWithDefaults instantiates a new PermissionLookupEntityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionLookupEntityResponseWithDefaults() *PermissionLookupEntityResponse {
	this := PermissionLookupEntityResponse{}
	return &this
}

// GetEntityIds returns the EntityIds field value if set, zero value otherwise.
func (o *PermissionLookupEntityResponse) GetEntityIds() []string {
	if o == nil || IsNil(o.EntityIds) {
		var ret []string
		return ret
	}
	return o.EntityIds
}

// GetEntityIdsOk returns a tuple with the EntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionLookupEntityResponse) GetEntityIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.EntityIds) {
		return nil, false
	}
	return o.EntityIds, true
}

// HasEntityIds returns a boolean if a field has been set.
func (o *PermissionLookupEntityResponse) HasEntityIds() bool {
	if o != nil && !IsNil(o.EntityIds) {
		return true
	}

	return false
}

// SetEntityIds gets a reference to the given []string and assigns it to the EntityIds field.
func (o *PermissionLookupEntityResponse) SetEntityIds(v []string) {
	o.EntityIds = v
}

func (o PermissionLookupEntityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionLookupEntityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityIds) {
		toSerialize["entity_ids"] = o.EntityIds
	}
	return toSerialize, nil
}

type NullablePermissionLookupEntityResponse struct {
	value *PermissionLookupEntityResponse
	isSet bool
}

func (v NullablePermissionLookupEntityResponse) Get() *PermissionLookupEntityResponse {
	return v.value
}

func (v *NullablePermissionLookupEntityResponse) Set(val *PermissionLookupEntityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionLookupEntityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionLookupEntityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionLookupEntityResponse(val *PermissionLookupEntityResponse) *NullablePermissionLookupEntityResponse {
	return &NullablePermissionLookupEntityResponse{value: val, isSet: true}
}

func (v NullablePermissionLookupEntityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionLookupEntityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


